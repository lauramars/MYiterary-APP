{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'; // import { Link } from 'react-router-dom';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: [],\n      city: \"\",\n      fetchItineraryList: []\n    };\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.props.fetchItinerariesList(city);\n  }\n\n  render() {\n    const itineraries = this.props.itineraries;\n    console.log(itineraries);\n    return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchItinerariesList: city => dispatch(fetchItinerariesList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js"],"names":["React","Component","connect","fetchItinerariesList","Itineraries","constructor","props","state","itineraries","city","fetchItineraryList","componentDidMount","window","location","pathname","split","render","console","log","mapStateToProps","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,qCAArC,C,CACA;;AAIA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,IAAI,EAAC,EAFI;AAGTC,MAAAA,kBAAkB,EAAE;AAHX,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIF,IAAI,GAAGG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX;AACA,SAAKT,KAAL,CAAWH,oBAAX,CAAgCM,IAAhC;AACH;;AAGDO,EAAAA,MAAM,GAAG;AAAA,UAEER,WAFF,GAEgB,KAAKF,KAFrB,CAEEE,WAFF;AAGLS,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ,CADJ;AAeH;;AArCmC;;AAuCpC,MAAMW,eAAe,GAAGZ,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBA,WAD5B;AAEHY,IAAAA,OAAO,EAAEb,KAAK,CAACC,WAAN,CAAkBY;AAFxB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHnB,IAAAA,oBAAoB,EAAGM,IAAD,IAAUa,QAAQ,CAACnB,oBAAoB,CAACM,IAAD,CAArB;AADrC,GAAP;AAGH,CAJD;;AAOA,eAAeP,OAAO,CAClBiB,eADkB,EAElBE,kBAFkB,CAAP,CAGbjB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'\n// import { Link } from 'react-router-dom';\n\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: [],\n            city:\"\",\n            fetchItineraryList: []\n        }\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItinerariesList(city);\n    }\n\n\n    render() {\n\n        const {itineraries} =this.props;\n        console.log(itineraries)\n    \n    return (\n        <div className=\"flex-container\">\n\n            <div className=\"itineraries-list\">\n              \n              <ul>\n                  {/* <li className=\"itinerary\" key={itineraries._id}>\n                      {this.state.cityItineraries}\n                  </li> */}\n              </ul>\n                \n            </div>\n\n        </div>\n    )\n}\n}\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItinerariesList: (city) => dispatch(fetchItinerariesList(city))\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itineraries)"]},"metadata":{},"sourceType":"module"}
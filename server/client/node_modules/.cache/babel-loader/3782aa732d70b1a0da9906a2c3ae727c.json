{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\nimport Filter from './Filter';\n\nclass Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [],\n      filteredCities: []\n    };\n\n    this.fetchCities = async () => {\n      var url = \"https://mern-ubiqum-v2.herokuapp.com/cities/all\";\n      let data = await fetch(url, {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        return data;\n      }).catch(error => console.log(error));\n      return data;\n    };\n\n    this.filterCities = cityFilter => {\n      let filteredCities = this.state.cities;\n      filteredCities = filteredCities.filter(city => {\n        let cityName = city.name.toLowerCase();\n        return cityName.indexOf(cityFilter.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filteredCities\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities().then(cities => this.setState({\n      cities\n    })); // .then(() => console.log('cities from state: ', this.state.cities)\n  }\n\n  render() {\n    //     let filteredCities = this.state.cities.filter((city) =>{\n    //         return city.name.toLowerCase().indexOf(this.state.cityFilter.toLowerCase())!== -1 \n    //     },\n    //     this.setState({filteredCities})\n    // ); \n    const cities = this.state.cities; // console.log(this.state)\n\n    const cityList = cities.map(city => {\n      return React.createElement(\"li\", {\n        className: \"city\",\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, city.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Cities, {\n      cities: this.state.filteredCities,\n      match: this.props.match,\n      onChange: this.filterCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, cityList));\n  }\n\n}\n\nexport default Cities;","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Cities.js"],"names":["React","Component","Filter","Cities","state","cities","filteredCities","fetchCities","url","data","fetch","method","then","response","json","console","log","catch","error","filterCities","cityFilter","filter","city","cityName","name","toLowerCase","indexOf","setState","componentDidMount","render","cityList","map","_id","props","match"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BG,KAF2B,GAEnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,cAAc,EAAC;AAFX,KAFmB;;AAAA,SAO3BC,WAP2B,GAOb,YAAY;AACtB,UAAIC,GAAG,GAAG,iDAAV;AACA,UAAIC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AACxBG,QAAAA,MAAM,EAAE;AADgB,OAAN,CAAL,CAGZC,IAHY,CAGPC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHL,EAIZF,IAJY,CAIPH,IAAI,IAAI;AACVM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,eAAOA,IAAP;AACH,OAPY,EAQZQ,KARY,CAQNC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CARH,CAAjB;AASA,aAAOT,IAAP;AACH,KAnB0B;;AAAA,SA4B3BU,YA5B2B,GA4BXC,UAAD,IAAgB;AAC3B,UAAId,cAAc,GAAE,KAAKF,KAAL,CAAWC,MAA/B;AACAC,MAAAA,cAAc,GAAGA,cAAc,CAACe,MAAf,CAAuBC,IAAD,IAAQ;AAC3C,YAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAf;AACA,eAAOF,QAAQ,CAACG,OAAT,CACHN,UAAU,CAACK,WAAX,EADG,MAC0B,CAAC,CADlC;AAEH,OAJgB,CAAjB;AAKA,WAAKE,QAAL,CAAc;AACVrB,QAAAA;AADU,OAAd;AAGH,KAtC0B;AAAA;;AAqB3BsB,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,WAAL,GACKK,IADL,CACWP,MAAD,IAAY,KAAKsB,QAAL,CAAc;AAAEtB,MAAAA;AAAF,KAAd,CADtB,EADgB,CAGhB;AAEH;;AAcDwB,EAAAA,MAAM,GAAG;AAET;AACA;AACA;AACA;AACA;AANS,UAQGxB,MARH,GAQc,KAAKD,KARnB,CAQGC,MARH,EASL;;AACA,UAAMyB,QAAQ,GAAGzB,MAAM,CAAC0B,GAAP,CAAYT,IAAD,IAAU;AAClC,aACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,GAAG,EAAEA,IAAI,CAACU,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCV,IAAI,CAACE,IAA1C,CADJ;AAGH,KAJgB,CAAjB;AAOA,WAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAI,KAAKpB,KAAL,CAAWE,cAA7B;AACE,MAAA,KAAK,EAAI,KAAK2B,KAAL,CAAWC,KADtB;AAEE,MAAA,QAAQ,EAAE,KAAKf,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAKI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,QADL,CALJ,CAHR;AAcH;;AAvE0B;;AA2E/B,eAAe3B,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Filter from './Filter';\n\n\nclass Cities extends Component {\n\n    state = {\n        cities: [],\n        filteredCities:[]\n    }\n\n    fetchCities = async () => {\n        var url = \"https://mern-ubiqum-v2.herokuapp.com/cities/all\"\n        let data = await fetch(url, {\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                return data\n            })\n            .catch(error => console.log(error))\n        return data\n    }\n\n    componentDidMount() {\n        this.fetchCities()\n            .then((cities) => this.setState({ cities }))\n        // .then(() => console.log('cities from state: ', this.state.cities)\n\n    }\n\n    filterCities = (cityFilter) => {\n        let filteredCities= this.state.cities\n        filteredCities = filteredCities.filter((city)=>{\n            let cityName = city.name.toLowerCase()\n            return cityName.indexOf(\n                cityFilter.toLowerCase()) !==-1\n        })\n        this.setState({\n            filteredCities\n        })\n    }\n\n    render() {\n\n    //     let filteredCities = this.state.cities.filter((city) =>{\n    //         return city.name.toLowerCase().indexOf(this.state.cityFilter.toLowerCase())!== -1 \n    //     },\n    //     this.setState({filteredCities})\n    // ); \n\n        const { cities } = this.state;\n        // console.log(this.state)\n        const cityList = cities.map((city) => {\n            return (\n                <li className=\"city\" key={city._id}>{city.name}</li>\n            )\n        }\n        )\n\n        return (\n\n              \n                <div>\n                    <Filter/>\n                <Cities cities = {this.state.filteredCities} \n                  match = {this.props.match} \n                  onChange={this.filterCities}/>\n                    <ul className=\"city-list\">\n                        {cityList}\n                    </ul>\n                </div>\n               \n        )\n    }\n}\n\n\nexport default Cities"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import homeIcon from'../images/homeIcon.png';import{fetchCitiesList as _fetchCitiesList}from'../store/actions/cityActions';var Cities=/*#__PURE__*/function(_Component){_inherits(Cities,_Component);function Cities(props){var _this;_classCallCheck(this,Cities);_this=_possibleConstructorReturn(this,_getPrototypeOf(Cities).call(this,props));_this.handleChange=function(e){_this.setState({cityFilter:e.target.value});};_this.filterCities=function(){var cities=_this.props.cities;var cityFilter=_this.state.cityFilter;return cities.filter(function(city){return city.name.toLowerCase().indexOf(cityFilter.toLowerCase())!==-1;});};_this.state={cities:[],cityFilter:\"\",fetchCitiesList:[]};return _this;}_createClass(Cities,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchCitiesList();}},{key:\"render\",value:function render(){console.log(this.props.cities);var loading=this.props.loading;if(!loading)return React.createElement(\"div\",{className:\"flex-container\"},React.createElement(\"header\",null,React.createElement(\"div\",null)),React.createElement(\"div\",{className:\"filter\"},React.createElement(\"label\",{htmlFor:\"filter\"},\"Filter by City: \"),React.createElement(\"input\",{type:\"text\",id:\"filter\",value:this.state.cityFilter,onChange:this.handleChange.bind(this)})),React.createElement(\"div\",{className:\"city-list\"},React.createElement(\"ul\",null,this.filterCities().map(function(city){return React.createElement(\"li\",{className:\"city\",key:city._id},React.createElement(Link,{to:\"/itineraries/\".concat(city.name)},city.name,\" - \",city.country,React.createElement(\"img\",{src:city.img,alt:\"cityPhoto\"})));}))),React.createElement(\"div\",{className:\"itemFooter\"},React.createElement(Link,{to:\"/\"},React.createElement(\"img\",{src:homeIcon,alt:\"homeLogo\"}))));else return React.createElement(\"div\",null,\"Loading ... \");}}]);return Cities;}(Component);var mapStateToProps=function mapStateToProps(state){return{// initialState: state.initialState\ncities:state.cities.cities,loading:state.cities.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchCitiesList:function fetchCitiesList(){return dispatch(_fetchCitiesList());}};};export default connect(mapStateToProps,mapDispatchToProps)(Cities);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/src/components/Cities.js"],"names":["React","Component","connect","Link","homeIcon","fetchCitiesList","Cities","props","handleChange","e","setState","cityFilter","target","value","filterCities","cities","state","filter","city","name","toLowerCase","indexOf","console","log","loading","bind","map","_id","country","img","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport homeIcon from '../images/homeIcon.png';\nimport {fetchCitiesList} from '../store/actions/cityActions';\n\n\nclass Cities extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            cities: [],\n            cityFilter: \"\",\n            fetchCitiesList: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchCitiesList()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            cityFilter: e.target.value\n        })\n    }\n\n    // fetchCities = async () => {\n    //     var url = \"https://mern-ubiqum-v2.herokuapp.com/cities/all\"\n    //     return await fetch(url, {\n    //         method: \"GET\",\n    //     })\n    //         .then(response => response.json())\n    //         .then(data => data)\n    //         .catch(error => console.log(error))\n    // }\n\n    filterCities = () => {\n        const { cities } = this.props;\n        const { cityFilter } = this.state;\n        return cities.filter((city) => {\n            return city.name.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1\n        },\n        );\n    }\n\n    render() {\n        console.log(this.props.cities)\n        const { loading } = this.props;\n         \n        if (!loading)\n        return (\n            \n            <div className=\"flex-container\">\n                <header >\n                 <div></div>\n                </header>\n\n                <div className=\"filter\">\n                    <label htmlFor=\"filter\">Filter by City: </label>\n                    <input type=\"text\" id=\"filter\"\n                        value={this.state.cityFilter}\n                        onChange={this.handleChange.bind(this)} />\n                </div>\n                \n                <div className=\"city-list\">\n                   <ul>\n                        {this.filterCities().map((city) => {\n                            return (\n                                <li className=\"city\" key={city._id}>\n                                    <Link to={`/itineraries/${city.name}`}>\n                                    {city.name} - {city.country}\n                                    <img src={city.img} alt=\"cityPhoto\"/>\n                                    \n                                  </Link>\n                                  \n                                </li>   \n                            )\n                        }\n                        )}\n                    </ul>\n                </div>\n                \n\n                <div className=\"itemFooter\">\n                    <Link to=\"/\">\n                        <img src={homeIcon} alt=\"homeLogo\" />\n                    </Link>\n                </div>\n\n            </div>\n        )\n        else \n        return (\n            <div>Loading ... </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // initialState: state.initialState\n        cities: state.cities.cities,\n        loading: state.cities.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCitiesList: () => dispatch(fetchCitiesList())\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    ) (Cities)"]},"metadata":{},"sourceType":"module"}
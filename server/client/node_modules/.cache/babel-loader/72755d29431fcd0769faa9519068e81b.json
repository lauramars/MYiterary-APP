{"ast":null,"code":"var axios=require('axios');// 2- ACTIONS\nexport var FETCH_CITIES_REQUEST='FETCH_CITIES_REQUEST';export var FETCH_CITIES_SUCCESS='FETCH_CITIES_SUCCESS';export var FETCH_CITIES_FAILURE='FETCH_CITIES_FAILURE';// Action creator\nexport var fetchCitiesRequest=function fetchCitiesRequest(){return{type:FETCH_CITIES_REQUEST};};export var fetchCitiesSuccess=function fetchCitiesSuccess(cities){return{type:FETCH_CITIES_SUCCESS,payload:cities};};export var fetchCitiesFailure=function fetchCitiesFailure(error){return{type:FETCH_CITIES_FAILURE,payload:error};};export var fetchCitiesList=function fetchCitiesList(){return function(dispatch){dispatch(fetchCitiesRequest());axios.get('https://mern-ubiqum-v2.herokuapp.com/cities/all').then(function(response){var cities=response.data;dispatch(fetchCitiesSuccess(cities));}).catch(function(error){dispatch(fetchCitiesFailure(error.message));});};};","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/src/store/actions/cityActions.js"],"names":["axios","require","FETCH_CITIES_REQUEST","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","fetchCitiesRequest","type","fetchCitiesSuccess","cities","payload","fetchCitiesFailure","error","fetchCitiesList","dispatch","get","then","response","data","catch","message"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CAKA;AAEI,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CACP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CACP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CAEX;AAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAK,CACnC,MAAO,CACHC,IAAI,CAAEJ,oBADH,CAAP,CAGH,CAJM,CAMP,MAAO,IAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,MAAD,CAAW,CACzC,MAAO,CACHF,IAAI,CAAEH,oBADH,CAEHM,OAAO,CAAED,MAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAU,CACxC,MAAO,CACHL,IAAI,CAAEF,oBADH,CAEHK,OAAO,CAAEE,KAFN,CAAP,CAIH,CALM,CAQP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAO,UAASC,QAAT,CAAmB,CAEtBA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR,CACAL,KAAK,CAACc,GAAN,CAAU,iDAAV,EACCC,IADD,CACO,SAAAC,QAAQ,CAAI,CACf,GAAMR,CAAAA,MAAM,CAAGQ,QAAQ,CAACC,IAAxB,CACAJ,QAAQ,CAACN,kBAAkB,CAACC,MAAD,CAAnB,CAAR,CACH,CAJD,EAMCU,KAND,CAMQ,SAAAP,KAAK,CAAI,CACbE,QAAQ,CAACH,kBAAkB,CAACC,KAAK,CAACQ,OAAP,CAAnB,CAAR,CACH,CARD,EASH,CAZD,CAaH,CAdM","sourcesContent":["const axios = require('axios')\n\n\n\n\n// 2- ACTIONS\n\n    export const FETCH_CITIES_REQUEST = 'FETCH_CITIES_REQUEST'\n    export const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS'\n    export const FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE' \n\n// Action creator\n\nexport const fetchCitiesRequest = ()=> {\n    return {\n        type: FETCH_CITIES_REQUEST\n    }\n}\n\nexport const fetchCitiesSuccess = (cities)=> {\n    return {\n        type: FETCH_CITIES_SUCCESS,\n        payload: cities\n    }\n}\n\nexport const fetchCitiesFailure = (error)=> {\n    return {\n        type: FETCH_CITIES_FAILURE,\n        payload: error\n    }\n}\n\n\nexport const fetchCitiesList = () => {\n    return function(dispatch) {\n        \n        dispatch(fetchCitiesRequest())\n        axios.get('https://mern-ubiqum-v2.herokuapp.com/cities/all')\n        .then (response => {\n            const cities = response.data\n            dispatch(fetchCitiesSuccess(cities))\n        })\n\n        .catch (error => {\n            dispatch(fetchCitiesFailure(error.message))\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
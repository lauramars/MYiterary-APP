{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\n\nclass Cities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        cityFilter: e.target.value\n      });\n      this.filterCities();\n    };\n\n    this.fetchCities = async () => {\n      var url = \"https://mern-ubiqum-v2.herokuapp.com/cities/all\";\n      return await fetch(url, {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => data).catch(error => console.log(error));\n    };\n\n    this.state = {\n      cities: [],\n      cityFilter: \"\",\n      filteredCities: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities().then(cities => this.setState({\n      cities\n    }));\n  }\n\n  filterCities() {\n    const _this$state = this.state,\n          cities = _this$state.cities,\n          cityFilter = _this$state.cityFilter;\n    return cities.filter(city => {\n      return city.name.toLowerCase().indexOf(cityFilter.toLowerCase()) !== -1;\n    });\n  }\n\n  render() {\n    const cityList = this.filterCities().map(city => {\n      return React.createElement(\"li\", {\n        className: \"city\",\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, city.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Filter by City: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      value: this.state.cityFilter,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, cityList));\n  }\n\n}\n\nexport default Cities;","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Cities.js"],"names":["React","Component","Cities","constructor","props","handleChange","e","setState","cityFilter","target","value","filterCities","fetchCities","url","fetch","method","then","response","json","data","catch","error","console","log","state","cities","filteredCities","componentDidMount","filter","city","name","toLowerCase","indexOf","render","cityList","map","_id","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAE3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,YAdmB,GAcHC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AADX,OAAd;AAGA,WAAKC,YAAL;AACH,KAnBkB;;AAAA,SAqBnBC,WArBmB,GAqBL,YAAY;AACtB,UAAIC,GAAG,GAAG,iDAAV;AACA,aAAO,MAAMC,KAAK,CAACD,GAAD,EAAM;AACpBE,QAAAA,MAAM,EAAE;AADY,OAAN,CAAL,CAGRC,IAHQ,CAGHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHT,EAIRF,IAJQ,CAIHG,IAAI,IAAIA,IAJL,EAKRC,KALQ,CAKFC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALP,CAAb;AAMH,KA7BkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETjB,MAAAA,UAAU,EAAE,EAFH;AAGTkB,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL,GACKI,IADL,CACWS,MAAD,IAAY,KAAKlB,QAAL,CAAc;AAAEkB,MAAAA;AAAF,KAAd,CADtB;AAEH;;AAmBDd,EAAAA,YAAY,GAAG;AAAA,wBACoB,KAAKa,KADzB;AAAA,UACHC,MADG,eACHA,MADG;AAAA,UACKjB,UADL,eACKA,UADL;AAEX,WAAOiB,MAAM,CAACG,MAAP,CAAeC,IAAD,IAAS;AAC1B,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCxB,UAAU,CAACuB,WAAX,EAAhC,MAA6D,CAAC,CAArE;AACC,KAFE,CAAP;AAIH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKvB,YAAL,GAAoBwB,GAApB,CAAyBN,IAAD,IAAU;AAC/C,aACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,GAAG,EAAEA,IAAI,CAACO,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCP,IAAI,CAACC,IAA1C,CADJ;AAGH,KAJgB,CAAjB;AAOA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AACI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWhB,UADtB;AAEI,MAAA,QAAQ,EAAE,KAAKH,YAAL,CAAkBgC,IAAlB,CAAuB,IAAvB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAQI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,QADL,CARJ,CADJ;AAcH;;AA/D0B;;AAmE/B,eAAehC,MAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass Cities extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cities: [],\n            cityFilter: \"\",\n            filteredCities: []\n        }\n    }\n\n    componentDidMount() {\n        this.fetchCities()\n            .then((cities) => this.setState({ cities }))\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            cityFilter: e.target.value\n        })\n        this.filterCities();\n    }\n\n    fetchCities = async () => {\n        var url = \"https://mern-ubiqum-v2.herokuapp.com/cities/all\"\n        return await fetch(url, {\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            .then(data => data)\n            .catch(error => console.log(error))\n    }\n\n    filterCities() {\n        const { cities, cityFilter } = this.state;\n        return cities.filter((city) =>{\n            return city.name.toLowerCase().indexOf(cityFilter.toLowerCase())!== -1 \n            },\n        ); \n    }\n\n    render() {\n        const cityList = this.filterCities().map((city) => {\n            return (\n                <li className=\"city\" key={city._id}>{city.name}</li>\n            )\n        }\n        )\n\n        return (\n            <div>\n                <div className=\"Filter\">\n                    <label htmlFor=\"filter\">Filter by City: </label>\n                    <input type=\"text\" id=\"filter\" \n                        value={this.state.cityFilter}\n                        onChange={this.handleChange.bind(this)}/>\n      \n                </div>\n                <ul className=\"city-list\">\n                    {cityList}\n                </ul>\n            </div>    \n        )\n    }\n}\n\n\nexport default Cities"]},"metadata":{},"sourceType":"module"}
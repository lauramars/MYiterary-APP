{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'; // import { Link } from 'react-router-dom';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props);\n\n    this.itinerariesByCity = () => {\n      const _this$props = this.props,\n            itineraries = _this$props.itineraries,\n            city = _this$props.city;\n      const cityItineraries = this.state.cityItineraries;\n      return itineraries.findOne(city => {\n        return cityItineraries;\n      });\n    };\n\n    this.state = {\n      itineraries: [],\n      city: \"\",\n      itinerariesByCity: [],\n      fetchItineraryList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchItinerariesList();\n    let cityItineraries = this.props.itineraries.city;\n    this.setState({\n      cityItineraries\n    });\n  }\n\n  // let cityRequested = req.params.name;\n  // cityModel.findOne({ name: cityRequested })\n  // \t.then(city => {\n  // \t\tres.send(city)\n  // \t})\n  // \t.catch(err => console.log(err));\n  render() {\n    return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" bla bla\"), \"console.log(\\\"bla bla\\\")\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itinearies,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchItinerariesList: () => dispatch(fetchItinerariesList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js"],"names":["React","Component","connect","fetchItinerariesList","Itineraries","constructor","props","itinerariesByCity","itineraries","city","cityItineraries","state","findOne","fetchItineraryList","componentDidMount","setState","render","mapStateToProps","itinearies","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,qCAArC,C,CACA;;AAIA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,iBAlBmB,GAkBC,MAAM;AAAA,0BACQ,KAAKD,KADb;AAAA,YACdE,WADc,eACdA,WADc;AAAA,YACDC,IADC,eACDA,IADC;AAAA,YAEfC,eAFe,GAEI,KAAKC,KAFT,CAEfD,eAFe;AAGtB,aAAOF,WAAW,CAACI,OAAZ,CAAqBH,IAAI,IAAI;AAChC,eAAOC,eAAP;AACH,OAFM,CAAP;AAIE,KAzBa;;AAEf,SAAKC,KAAL,GAAa;AACTH,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,IAAI,EAAC,EAFI;AAGTF,MAAAA,iBAAiB,EAAE,EAHV;AAITM,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWH,oBAAX;AACA,QAAIO,eAAe,GAAG,KAAKJ,KAAL,CAAWE,WAAX,CAAuBC,IAA7C;AACA,SAAKM,QAAL,CAAc;AACVL,MAAAA;AADU,KAAd;AAGH;;AAWD;AACA;AACA;AACA;AACA;AACA;AAGAM,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,6BAFJ,CADJ;AAWH;;AAjD+B;;AAoDpC,MAAMC,eAAe,GAAGN,KAAK,IAAI;AAC7B,SAAO;AACHH,IAAAA,WAAW,EAAEG,KAAK,CAACO,UADhB;AAEHC,IAAAA,OAAO,EAAER,KAAK,CAACH,WAAN,CAAkBW;AAFxB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHlB,IAAAA,oBAAoB,EAAE,MAAMkB,QAAQ,CAAClB,oBAAoB,EAArB;AADjC,GAAP;AAGH,CAJD;;AAOA,eAAeD,OAAO,CAClBe,eADkB,EAElBG,kBAFkB,CAAP,CAGbhB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'\n// import { Link } from 'react-router-dom';\n\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: [],\n            city:\"\",\n            itinerariesByCity: [],\n            fetchItineraryList: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchItinerariesList();\n        let cityItineraries = this.props.itineraries.city;\n        this.setState({\n            cityItineraries\n        });\n    }\n\n    itinerariesByCity = () => {\n        const { itineraries, city } = this.props;\n        const {cityItineraries} = this.state;\n        return itineraries.findOne( city => {\n            return cityItineraries\n        },\n\n        )}\n\n    // let cityRequested = req.params.name;\n    // cityModel.findOne({ name: cityRequested })\n    // \t.then(city => {\n    // \t\tres.send(city)\n    // \t})\n    // \t.catch(err => console.log(err));\n\n\n    render() {\n        return (\n            <div className=\"flex-container\">\n\n                <div className=\"itineraries-list\">\n\n                    <p> bla bla</p>\n                    console.log(\"bla bla\")\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itinearies,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItinerariesList: () => dispatch(fetchItinerariesList())\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itineraries)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const axios = require('axios'); // 2- ACTIONS\n\n\nexport const FETCH_CITIES_REQUEST = 'FETCH_CITIES_REQUEST';\nexport const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS';\nexport const FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE'; // Action creator\n\nexport const fetchCitiesRequest = () => {\n  return {\n    type: FETCH_CITIES_REQUEST\n  };\n};\nexport const fetchCitiesSuccess = cities => {\n  return {\n    type: FETCH_CITIES_SUCCESS,\n    payload: cities\n  };\n};\nexport const fetchCitiesFailure = error => {\n  return {\n    type: FETCH_CITIES_FAILURE,\n    payload: error\n  };\n};\nexport const fetchCitiesList = () => {\n  return function (dispatch) {\n    dispatch(fetchCitiesRequest());\n    axios.get('https://mern-ubiqum-v2.herokuapp.com/cities/all').then(response => {\n      const cities = response.data.map(city => city.id);\n      dispatch(fetchCitiesSuccess(cities));\n    }).catch(error => {\n      dispatch(fetchCitiesFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/store/actions/cityActions.js"],"names":["axios","require","FETCH_CITIES_REQUEST","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","fetchCitiesRequest","type","fetchCitiesSuccess","cities","payload","fetchCitiesFailure","error","fetchCitiesList","dispatch","get","then","response","data","map","city","id","catch","message"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAKA;;;AAEI,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B,C,CAEX;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAK;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMK,kBAAkB,GAAIC,MAAD,IAAW;AACzC,SAAO;AACHF,IAAAA,IAAI,EAAEH,oBADH;AAEHM,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAIC,KAAD,IAAU;AACxC,SAAO;AACHL,IAAAA,IAAI,EAAEF,oBADH;AAEHK,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAQP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO,UAASC,QAAT,EAAmB;AAEtBA,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACAL,IAAAA,KAAK,CAACc,GAAN,CAAU,iDAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMR,MAAM,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAA/B,CAAf;AACAP,MAAAA,QAAQ,CAACN,kBAAkB,CAACC,MAAD,CAAnB,CAAR;AACH,KAJD,EAMCa,KAND,CAMQV,KAAK,IAAI;AACbE,MAAAA,QAAQ,CAACH,kBAAkB,CAACC,KAAK,CAACW,OAAP,CAAnB,CAAR;AACH,KARD;AASH,GAZD;AAaH,CAdM","sourcesContent":["const axios = require('axios')\n\n\n\n\n// 2- ACTIONS\n\n    export const FETCH_CITIES_REQUEST = 'FETCH_CITIES_REQUEST'\n    export const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS'\n    export const FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE' \n\n// Action creator\n\nexport const fetchCitiesRequest = ()=> {\n    return {\n        type: FETCH_CITIES_REQUEST\n    }\n}\n\nexport const fetchCitiesSuccess = (cities)=> {\n    return {\n        type: FETCH_CITIES_SUCCESS,\n        payload: cities\n    }\n}\n\nexport const fetchCitiesFailure = (error)=> {\n    return {\n        type: FETCH_CITIES_FAILURE,\n        payload: error\n    }\n}\n\n\nexport const fetchCitiesList = () => {\n    return function(dispatch) {\n        \n        dispatch(fetchCitiesRequest())\n        axios.get('https://mern-ubiqum-v2.herokuapp.com/cities/all')\n        .then (response => {\n            const cities = response.data.map(city => city.id)\n            dispatch(fetchCitiesSuccess(cities))\n        })\n\n        .catch (error => {\n            dispatch(fetchCitiesFailure(error.message))\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions';\nimport userIcon from '../images/userIcon.png'; // import { Link } from 'react-router-dom';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: [],\n      city: \"\",\n      fetchItineraryList: []\n    };\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.props.fetchItinerariesList(city);\n  }\n\n  render() {\n    const itineraries = this.props.itineraries;\n    console.log(itineraries);\n    const itinerariesList = itineraries.map(itinerary => {\n      return React.createElement(\"div\", {\n        className: \"itineraryItem\",\n        key: itinerary._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userIcon,\n        alt: \"userPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"UserName\")), React.createElement(\"div\", {\n        className: \"titleIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" \", itinerary.title, \" \")), React.createElement(\"div\", {\n        className: \"detailsIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Likes:\", itinerary.rating), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, itinerary.duration), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, itinerary.price, \" \")), React.createElement(\"div\", {\n        className: \"viewAll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"View All\")));\n    });\n    const loading = this.props.loading;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"City:\"), itinerariesList));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Loading itineraries...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchItinerariesList: city => dispatch(fetchItinerariesList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/client/src/components/Itineraries.js"],"names":["React","Component","connect","fetchItinerariesList","userIcon","Itineraries","constructor","props","state","itineraries","city","fetchItineraryList","componentDidMount","window","location","pathname","split","render","console","log","itinerariesList","map","itinerary","_id","title","rating","duration","price","loading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'\nimport userIcon from '../images/userIcon.png'\n// import { Link } from 'react-router-dom';\n\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: [],\n            city: \"\",\n            fetchItineraryList: []\n        }\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItinerariesList(city);\n    }\n\n\n    render() {\n\n        const { itineraries } = this.props;\n        console.log(itineraries)\n        const itinerariesList = itineraries.map(itinerary => {\n            return (\n                <div className=\"itineraryItem\" key={itinerary._id} >\n\n                    <div className=\"user\">\n                        <img src={userIcon} alt=\"userPhoto\" />\n                        <p>UserName</p>\n                    </div>\n\n                    <div className=\"titleIt\">\n                        <h3> {itinerary.title} </h3>\n                    </div>\n\n                    <div className=\"detailsIt\">\n                        <p>Likes:{itinerary.rating}</p>\n                        <br></br>\n                        <p>{itinerary.duration}</p>\n                        <br></br>\n                        <p>{itinerary.price} </p>\n                    </div>\n\n                    <div className=\"viewAll\">\n                        <p>View All</p>\n                    </div>\n                </div>\n            )\n        })\n\n\n        const { loading } = this.props;\n\n        if (!loading)\n            return (\n                <div className=\"flex-container\">\n\n                    <div className=\"itineraries-list\">\n                        <h3>City:</h3>\n                        {itinerariesList}\n\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItinerariesList: (city) => dispatch(fetchItinerariesList(city))\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itineraries)"]},"metadata":{},"sourceType":"module"}
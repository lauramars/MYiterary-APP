{"ast":null,"code":"import _classCallCheck from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{fetchItinerariesList as _fetchItinerariesList}from'../store/actions/itinerariesActions';import userIcon from'../images/userIcon.png';import{Link}from'react-router-dom';var Itineraries=/*#__PURE__*/function(_Component){_inherits(Itineraries,_Component);function Itineraries(props){var _this;_classCallCheck(this,Itineraries);_this=_possibleConstructorReturn(this,_getPrototypeOf(Itineraries).call(this,props));_this.state={itineraries:[],city:\"\",fetchItineraryList:[]};return _this;}_createClass(Itineraries,[{key:\"componentDidMount\",value:function componentDidMount(){var city=window.location.pathname.split('/')[2];this.props.fetchItinerariesList(city);}},{key:\"render\",value:function render(){var itineraries=this.props.itineraries;console.log(itineraries);var itinerariesList=itineraries.map(function(itinerary){return React.createElement(\"div\",{className:\"itineraryItem\",key:itinerary._id},React.createElement(\"div\",{className:\"user\"},React.createElement(\"img\",{src:userIcon,alt:\"userPhoto\"}),React.createElement(\"p\",null,\"UserName\")),React.createElement(\"div\",{className:\"titleIt\"},React.createElement(\"h3\",null,\" \",itinerary.title,\" \")),React.createElement(\"div\",{className:\"detailsIt\"},React.createElement(\"p\",null,\"Likes:\",itinerary.rating),React.createElement(\"br\",null),React.createElement(\"p\",null,itinerary.duration),React.createElement(\"br\",null),React.createElement(\"p\",null,itinerary.price,\" \")),React.createElement(\"div\",{className:\"viewAll\"},React.createElement(\"p\",null,\"View All\")));});var loading=this.props.loading;if(!loading)return React.createElement(\"div\",{className:\"flex-container\"},React.createElement(\"div\",{className:\"itineraries-list\"},React.createElement(\"h2\",null,\"City:\"),React.createElement(\"h3\",null,\" Available MYtineraries:\"),itinerariesList,React.createElement(Link,{to:\"/cities\"},React.createElement(\"center\",null,\"Chose another city...\"))));else return React.createElement(\"div\",null,\"Loading itineraries...\");}}]);return Itineraries;}(Component);var mapStateToProps=function mapStateToProps(state){return{itineraries:state.itineraries.itineraries,loading:state.itineraries.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchItinerariesList:function fetchItinerariesList(city){return dispatch(_fetchItinerariesList(city));}};};export default connect(mapStateToProps,mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/src/components/Itineraries.js"],"names":["React","Component","connect","fetchItinerariesList","userIcon","Link","Itineraries","props","state","itineraries","city","fetchItineraryList","window","location","pathname","split","console","log","itinerariesList","map","itinerary","_id","title","rating","duration","price","loading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"muBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,oBAAoB,GAApBA,CAAAA,qBAAT,KAAqC,qCAArC,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,IAAT,KAAqB,kBAArB,C,GAIMC,CAAAA,W,qEAEF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,WAAW,CAAE,EADJ,CAETC,IAAI,CAAE,EAFG,CAGTC,kBAAkB,CAAE,EAHX,CAAb,CAFe,aAOlB,C,qFAEmB,CAChB,GAAID,CAAAA,IAAI,CAAGE,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX,CACA,KAAKR,KAAL,CAAWJ,oBAAX,CAAgCO,IAAhC,EACH,C,uCAGQ,IAEGD,CAAAA,WAFH,CAEmB,KAAKF,KAFxB,CAEGE,WAFH,CAILO,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAGA,GAAMS,CAAAA,eAAe,CAAGT,WAAW,CAACU,GAAZ,CAAgB,SAAAC,SAAS,CAAI,CACjD,MACI,4BAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEA,SAAS,CAACC,GAA9C,EAEI,2BAAK,SAAS,CAAC,MAAf,EACI,2BAAK,GAAG,CAAEjB,QAAV,CAAoB,GAAG,CAAC,WAAxB,EADJ,CAEI,wCAFJ,CAFJ,CAOI,2BAAK,SAAS,CAAC,SAAf,EACI,kCAAMgB,SAAS,CAACE,KAAhB,KADJ,CAPJ,CAWI,2BAAK,SAAS,CAAC,WAAf,EACI,sCAAUF,SAAS,CAACG,MAApB,CADJ,CAEI,8BAFJ,CAGI,6BAAIH,SAAS,CAACI,QAAd,CAHJ,CAII,8BAJJ,CAKI,6BAAIJ,SAAS,CAACK,KAAd,KALJ,CAXJ,CAmBI,2BAAK,SAAS,CAAC,SAAf,EACI,wCADJ,CAnBJ,CADJ,CAyBH,CA1BuB,CAAxB,CAPK,GAoCGC,CAAAA,OApCH,CAoCe,KAAKnB,KApCpB,CAoCGmB,OApCH,CAsCL,GAAI,CAACA,OAAL,CACI,MACI,4BAAK,SAAS,CAAC,gBAAf,EAEI,2BAAK,SAAS,CAAC,kBAAf,EACI,sCADJ,CAEI,yDAFJ,CAGKR,eAHL,CAKG,oBAAC,IAAD,EAAM,EAAE,CAAC,SAAT,EACC,0DADD,CALH,CAFJ,CADJ,CADJ,IAiBI,OACI,yDADJ,CAGP,C,yBA3EqBjB,S,EA6E1B,GAAM0B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAnB,KAAK,CAAI,CAC7B,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WAAN,CAAkBA,WAD5B,CAEHiB,OAAO,CAAElB,KAAK,CAACC,WAAN,CAAkBiB,OAFxB,CAAP,CAIH,CALD,CAOA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACH1B,oBAAoB,CAAE,8BAACO,IAAD,QAAUmB,CAAAA,QAAQ,CAAC1B,qBAAoB,CAACO,IAAD,CAArB,CAAlB,EADnB,CAAP,CAGH,CAJD,CAOA,cAAeR,CAAAA,OAAO,CAClByB,eADkB,CAElBC,kBAFkB,CAAP,CAGbtB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'\nimport userIcon from '../images/userIcon.png'\nimport { Link } from 'react-router-dom';\n\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: [],\n            city: \"\",\n            fetchItineraryList: []\n        }\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItinerariesList(city);\n    }\n\n\n    render() {\n\n        const { itineraries } = this.props;\n        \n        console.log(itineraries)\n       \n\n        const itinerariesList = itineraries.map(itinerary => {\n            return (\n                <div className=\"itineraryItem\" key={itinerary._id} >\n\n                    <div className=\"user\">\n                        <img src={userIcon} alt=\"userPhoto\" />\n                        <p>UserName</p>\n                    </div>\n\n                    <div className=\"titleIt\">\n                        <h3> {itinerary.title} </h3>\n                    </div>\n\n                    <div className=\"detailsIt\">\n                        <p>Likes:{itinerary.rating}</p>\n                        <br></br>\n                        <p>{itinerary.duration}</p>\n                        <br></br>\n                        <p>{itinerary.price} </p>\n                    </div>\n\n                    <div className=\"viewAll\">\n                        <p>View All</p>\n                    </div>\n                </div>\n            )\n        })\n\n\n        const { loading } = this.props;\n\n        if (!loading)\n            return (\n                <div className=\"flex-container\">\n\n                    <div className=\"itineraries-list\">\n                        <h2>City:</h2>\n                        <h3> Available MYtineraries:</h3>\n                        {itinerariesList}\n                       \n                       <Link to=\"/cities\">\n                        <center>Chose another city...</center>\n                        </Link>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItinerariesList: (city) => dispatch(fetchItinerariesList(city))\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itineraries)"]},"metadata":{},"sourceType":"module"}
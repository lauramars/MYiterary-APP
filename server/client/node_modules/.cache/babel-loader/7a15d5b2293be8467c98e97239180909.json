{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions';\nimport userIcon from '../images/userIcon.png';\nimport { Link } from 'react-router-dom';\nimport Activities from './Activities';\nimport { Button, UncontrolledCollapse } from 'reactstrap';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     // itineraries: [],\n    //     // city: \"\",\n    //     // fetchItineraryList: [],\n    //     // activities:[]\n    // } I don't need them anymore because I created my own back end\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.props.fetchItinerariesList(city);\n  }\n\n  render() {\n    const itineraries = this.props.itineraries;\n    console.log(itineraries);\n    console.log(this.props.itineraries);\n    const itinerariesList = itineraries.map(itinerary => {\n      return React.createElement(\"div\", {\n        className: \"itineraryItem\",\n        key: itinerary._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userIcon,\n        alt: \"userPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"UserName\")), React.createElement(\"div\", {\n        className: \"titleIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" \", itinerary.title, \" \")), React.createElement(\"div\", {\n        className: \"detailsIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Likes:\", itinerary.rating), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, itinerary.duration), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, itinerary.price, \" \")), React.createElement(\"div\", {\n        className: \"hashtag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, itinerary.hashtag)), React.createElement(\"div\", {\n        className: \"viewAll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"tranparent\",\n        id: \"toggler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"View All v\"), React.createElement(UncontrolledCollapse, {\n        toggler: \"#toggler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Activities, {\n        activities: itinerary.activities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))));\n    });\n    const loading = this.props.loading;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"City:\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Available MYtineraries:\"), itinerariesList, React.createElement(Link, {\n      to: \"/cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Chose another city...\"))));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Loading itineraries...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchItinerariesList: city => dispatch(fetchItinerariesList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/Ubicum/Part VI-React/client/server/client/src/components/Itineraries.js"],"names":["React","Component","connect","fetchItinerariesList","userIcon","Link","Activities","Button","UncontrolledCollapse","Itineraries","constructor","props","componentDidMount","city","window","location","pathname","split","render","itineraries","console","log","itinerariesList","map","itinerary","_id","title","rating","duration","price","hashtag","activities","loading","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchItinerariesList } from '../store/actions/itinerariesActions'\nimport userIcon from '../images/userIcon.png'\nimport { Link } from 'react-router-dom';\nimport Activities from './Activities'\nimport { Button, UncontrolledCollapse } from 'reactstrap';\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     // itineraries: [],\n        //     // city: \"\",\n        //     // fetchItineraryList: [],\n        //     // activities:[]\n        // } I don't need them anymore because I created my own back end\n    }\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n        this.props.fetchItinerariesList(city);\n    }\n\n\n    render() {\n\n        const { itineraries } = this.props;\n\n        console.log(itineraries)\n        console.log(this.props.itineraries)\n\n        const itinerariesList = itineraries.map(itinerary => {\n\n            return (\n                <div className=\"itineraryItem\" key={itinerary._id} >\n\n                    <div className=\"user\">\n                        <img src={userIcon} alt=\"userPhoto\" />\n                        <p>UserName</p>\n                    </div>\n\n                    <div className=\"titleIt\">\n                        <h3> {itinerary.title} </h3>\n                    </div>\n\n                    <div className=\"detailsIt\">\n                        <p>Likes:{itinerary.rating}</p>\n                        <br></br>\n                        <p>{itinerary.duration}</p>\n                        <br></br>\n                        <p>{itinerary.price} </p>\n                    </div>\n                    <div className=\"hashtag\">\n                        <p>{itinerary.hashtag}</p>\n                    </div>\n\n                    <div className=\"viewAll\">\n                        \n                        <Button color=\"tranparent\" id=\"toggler\" >\n                            View All v\n                            \n                        </Button>\n                        <UncontrolledCollapse toggler=\"#toggler\">\n\n                        <Activities activities={itinerary.activities} />\n                        </UncontrolledCollapse>\n\n                    </div>\n\n                </div>\n            )\n        })\n\n\n        const { loading } = this.props;\n\n        if (!loading)\n            return (\n                <div className=\"flex-container\">\n\n                    <div className=\"itineraries-list\">\n                        <h2>City:</h2>\n                        <h3> Available MYtineraries:</h3>\n                        {itinerariesList}\n\n                        <Link to=\"/cities\">\n                            <center>Chose another city...</center>\n                        </Link>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div>Loading itineraries...</div>\n            )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItinerariesList: (city) => dispatch(fetchItinerariesList(city))\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itineraries)"]},"metadata":{},"sourceType":"module"}